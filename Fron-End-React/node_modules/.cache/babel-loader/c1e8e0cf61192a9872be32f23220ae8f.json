{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel Arispe\\\\Desktop\\\\Prueba-Tecnica-NTTDATA\\\\src\\\\Context\\\\data-Graficas.js\",\n    _s = $RefreshSig$();\n\n//IMPORTACIONES\nimport { useNavigate } from \"react-router-dom\";\nimport { createContext, useState } from \"react\";\nimport errorManage from \"../Helpers/errors\";\nimport axios from \"axios\"; //CREANDO EL CONTEXTO Y EXPORTANDOLO\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GraficasContext = /*#__PURE__*/createContext();\n\nconst GraficaDatos = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //ESTADOS\n  //PARA LOS DATOS DE LA GRAFICA DE BARRA\n  const [dataBarra, setDataBarra] = useState([0, 0, 0]); //PARA LOS DATOS DE LA GRAFICA LINEAL\n\n  const [dataLineal, setDataLineal] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]); //NAVEGADOR PARA REDIRIGIR AL LOGIN\n\n  const navegador = useNavigate(); //FUNCION PARA OBTENER LOS DATOS DE LA BARRA\n\n  const getDataBarra = async () => {\n    try {\n      //HACIENDO LA PETICION DE LOS USUARIOS\n      const userList = await axios.get(`http://localhost:3006/Users/usersList`, {\n        headers: {\n          \"access-token\": sessionStorage.getItem('token')\n        }\n      }); //CREANDO EL OBJETO PARA ALMACENAR LAS CANTIDADES SEGUN EL TIPO DE CLIENTE\n\n      const cantidadClientesRol = {\n        admin: 0,\n        basico: 0,\n        vendedor: 0\n      }; //RECORRIENDO LA LISTA DE USUARIOS\n\n      userList.data.forEach(_ref2 => {\n        let {\n          rol\n        } = _ref2;\n        if (Object.keys(cantidadClientesRol).includes(rol)) cantidadClientesRol[rol] = cantidadClientesRol[rol] + 1;\n      }); //ACTUALIZANDO LOS DATOS DE LA GRAFICA\n\n      setDataBarra(Object.values(cantidadClientesRol));\n    } catch (error) {\n      errorManage(error, navegador);\n    }\n  }; //FUNCION PARA OBTENER LOS DATOS DE LA GRAFICA\n\n\n  const getDataLineal = async () => {\n    try {\n      //HACIENDO LA PETICION DE LOS USUARIOS\n      const userList = await axios.get(`http://localhost:3006/Users/usersList`, {\n        headers: {\n          \"access-token\": sessionStorage.getItem('token')\n        }\n      }); //OBJETO PARA GUARDAR LOS DATOS SEGUN EL MES\n\n      const mesesData = {\n        0: 0,\n        1: 0,\n        2: 0,\n        3: 0,\n        4: 0,\n        5: 0,\n        6: 0,\n        7: 0,\n        8: 0,\n        9: 0,\n        10: 0,\n        11: 0\n      }; //RECORRIENDO LA LISTA DE USUARIOS\n\n      userList.data.forEach(_ref3 => {\n        let {\n          fechaCreacion\n        } = _ref3;\n        //OBTENIENDO EL MES Y CONVIRTIENDOLO A STRING\n        let mesFecha = new Date(fechaCreacion).getMonth().toString();\n        if (Object.keys(mesesData).includes(mesFecha)) mesesData[mesFecha] = mesesData[mesFecha] + 1;\n      }); //ACTUALIZANDO LOS DATOS DE LA GRAFICA\n\n      setDataLineal(Object.values(mesesData));\n    } catch (error) {\n      errorManage(error, navegador);\n    }\n  }; //OBJETO QUE SE VA A PASAR GLOBAL\n\n\n  const contextValue = {\n    dataBarra,\n    dataLineal,\n    getDataBarra,\n    getDataLineal\n  };\n  return /*#__PURE__*/_jsxDEV(GraficasContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GraficaDatos, \"ncQfFxDzfvo3n/RN8QGFm0Pv/ls=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GraficaDatos;\nexport default GraficaDatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraficaDatos\");","map":{"version":3,"names":["useNavigate","createContext","useState","errorManage","axios","GraficasContext","GraficaDatos","children","dataBarra","setDataBarra","dataLineal","setDataLineal","navegador","getDataBarra","userList","get","headers","sessionStorage","getItem","cantidadClientesRol","admin","basico","vendedor","data","forEach","rol","Object","keys","includes","values","error","getDataLineal","mesesData","fechaCreacion","mesFecha","Date","getMonth","toString","contextValue"],"sources":["C:/Users/Gabriel Arispe/Desktop/Prueba-Tecnica-NTTDATA/src/Context/data-Graficas.js"],"sourcesContent":["//IMPORTACIONES\r\nimport  { useNavigate } from \"react-router-dom\";\r\nimport { createContext, useState } from \"react\";\r\nimport errorManage from \"../Helpers/errors\";\r\nimport axios from \"axios\";\r\n\r\n//CREANDO EL CONTEXTO Y EXPORTANDOLO\r\nexport const GraficasContext = createContext();\r\n\r\nconst GraficaDatos = ({ children }) => {\r\n  \r\n   //ESTADOS\r\n  //PARA LOS DATOS DE LA GRAFICA DE BARRA\r\n  const [dataBarra, setDataBarra] = useState([0,0,0]);\r\n  //PARA LOS DATOS DE LA GRAFICA LINEAL\r\n  const [dataLineal, setDataLineal] = useState([0,0,0,0,0,0,0,0,0,0,0,0]);\r\n\r\n  //NAVEGADOR PARA REDIRIGIR AL LOGIN\r\n  const navegador=useNavigate();\r\n\r\n  //FUNCION PARA OBTENER LOS DATOS DE LA BARRA\r\n  const getDataBarra=async() => {\r\n\r\n    try {\r\n\r\n        //HACIENDO LA PETICION DE LOS USUARIOS\r\n        const userList= await axios.get(`http://localhost:3006/Users/usersList`,{\r\n\r\n            headers:{\r\n              \"access-token\":sessionStorage.getItem('token')\r\n            }\r\n    \r\n        });\r\n        //CREANDO EL OBJETO PARA ALMACENAR LAS CANTIDADES SEGUN EL TIPO DE CLIENTE\r\n        const cantidadClientesRol={\r\n\r\n                admin:0,\r\n                basico:0,\r\n                vendedor:0\r\n\r\n        };\r\n        //RECORRIENDO LA LISTA DE USUARIOS\r\n        userList.data.forEach(({rol}) => {\r\n           \r\n          if (Object.keys(cantidadClientesRol).includes(rol)) cantidadClientesRol[rol]=cantidadClientesRol[rol]+1;\r\n            \r\n        });\r\n        //ACTUALIZANDO LOS DATOS DE LA GRAFICA\r\n        setDataBarra(Object.values(cantidadClientesRol));\r\n\r\n    } catch (error) {\r\n      \r\n        errorManage(error,navegador);\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  //FUNCION PARA OBTENER LOS DATOS DE LA GRAFICA\r\n  const getDataLineal=async() => { \r\n    \r\n    try {\r\n\r\n       //HACIENDO LA PETICION DE LOS USUARIOS\r\n       const userList= await axios.get(`http://localhost:3006/Users/usersList`,{\r\n\r\n          headers:{\r\n             \"access-token\":sessionStorage.getItem('token')\r\n              }\r\n       });\r\n       //OBJETO PARA GUARDAR LOS DATOS SEGUN EL MES\r\n       const mesesData={\r\n\r\n        0:0,\r\n        1:0,\r\n        2:0,\r\n        3:0,\r\n        4:0,\r\n        5:0,\r\n        6:0,\r\n        7:0,\r\n        8:0,\r\n        9:0,\r\n        10:0,\r\n        11:0\r\n\r\n\r\n       };\r\n        //RECORRIENDO LA LISTA DE USUARIOS\r\n        userList.data.forEach(({fechaCreacion}) => {\r\n          \r\n          //OBTENIENDO EL MES Y CONVIRTIENDOLO A STRING\r\n          let mesFecha=new Date(fechaCreacion).getMonth().toString();\r\n         \r\n          if (Object.keys(mesesData).includes(mesFecha)) mesesData[mesFecha] = mesesData[mesFecha]+1;\r\n          \r\n        });\r\n        //ACTUALIZANDO LOS DATOS DE LA GRAFICA\r\n        setDataLineal(Object.values(mesesData));\r\n\r\n    } catch (error) {\r\n        errorManage(error,navegador);\r\n    }\r\n\r\n\r\n   }\r\n\r\n  //OBJETO QUE SE VA A PASAR GLOBAL\r\n  const contextValue = {\r\n    \r\n    dataBarra,\r\n    dataLineal,\r\n    getDataBarra,\r\n    getDataLineal\r\n\r\n  };\r\n\r\n  return (\r\n    <GraficasContext.Provider value={contextValue}>{children}</GraficasContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GraficaDatos;"],"mappings":";;;AAAA;AACA,SAAUA,WAAV,QAA6B,kBAA7B;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,EAArC;;AAEP,MAAMK,YAAY,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAEpC;EACD;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,CAA1C,CAJqC,CAKrC;;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB,CAAD,CAA5C,CANqC,CAQrC;;EACA,MAAMU,SAAS,GAACZ,WAAW,EAA3B,CATqC,CAWrC;;EACA,MAAMa,YAAY,GAAC,YAAW;IAE5B,IAAI;MAEA;MACA,MAAMC,QAAQ,GAAE,MAAMV,KAAK,CAACW,GAAN,CAAW,uCAAX,EAAkD;QAEpEC,OAAO,EAAC;UACN,gBAAeC,cAAc,CAACC,OAAf,CAAuB,OAAvB;QADT;MAF4D,CAAlD,CAAtB,CAHA,CAUA;;MACA,MAAMC,mBAAmB,GAAC;QAElBC,KAAK,EAAC,CAFY;QAGlBC,MAAM,EAAC,CAHW;QAIlBC,QAAQ,EAAC;MAJS,CAA1B,CAXA,CAkBA;;MACAR,QAAQ,CAACS,IAAT,CAAcC,OAAd,CAAsB,SAAW;QAAA,IAAV;UAACC;QAAD,CAAU;QAE/B,IAAIC,MAAM,CAACC,IAAP,CAAYR,mBAAZ,EAAiCS,QAAjC,CAA0CH,GAA1C,CAAJ,EAAoDN,mBAAmB,CAACM,GAAD,CAAnB,GAAyBN,mBAAmB,CAACM,GAAD,CAAnB,GAAyB,CAAlD;MAErD,CAJD,EAnBA,CAwBA;;MACAhB,YAAY,CAACiB,MAAM,CAACG,MAAP,CAAcV,mBAAd,CAAD,CAAZ;IAEH,CA3BD,CA2BE,OAAOW,KAAP,EAAc;MAEZ3B,WAAW,CAAC2B,KAAD,EAAOlB,SAAP,CAAX;IAEH;EAGF,CApCD,CAZqC,CAkDrC;;;EACA,MAAMmB,aAAa,GAAC,YAAW;IAE7B,IAAI;MAED;MACA,MAAMjB,QAAQ,GAAE,MAAMV,KAAK,CAACW,GAAN,CAAW,uCAAX,EAAkD;QAErEC,OAAO,EAAC;UACL,gBAAeC,cAAc,CAACC,OAAf,CAAuB,OAAvB;QADV;MAF6D,CAAlD,CAAtB,CAHC,CASD;;MACA,MAAMc,SAAS,GAAC;QAEf,GAAE,CAFa;QAGf,GAAE,CAHa;QAIf,GAAE,CAJa;QAKf,GAAE,CALa;QAMf,GAAE,CANa;QAOf,GAAE,CAPa;QAQf,GAAE,CARa;QASf,GAAE,CATa;QAUf,GAAE,CAVa;QAWf,GAAE,CAXa;QAYf,IAAG,CAZY;QAaf,IAAG;MAbY,CAAhB,CAVC,CA2BA;;MACAlB,QAAQ,CAACS,IAAT,CAAcC,OAAd,CAAsB,SAAqB;QAAA,IAApB;UAACS;QAAD,CAAoB;QAEzC;QACA,IAAIC,QAAQ,GAAC,IAAIC,IAAJ,CAASF,aAAT,EAAwBG,QAAxB,GAAmCC,QAAnC,EAAb;QAEA,IAAIX,MAAM,CAACC,IAAP,CAAYK,SAAZ,EAAuBJ,QAAvB,CAAgCM,QAAhC,CAAJ,EAA+CF,SAAS,CAACE,QAAD,CAAT,GAAsBF,SAAS,CAACE,QAAD,CAAT,GAAoB,CAA1C;MAEhD,CAPD,EA5BA,CAoCA;;MACAvB,aAAa,CAACe,MAAM,CAACG,MAAP,CAAcG,SAAd,CAAD,CAAb;IAEH,CAvCD,CAuCE,OAAOF,KAAP,EAAc;MACZ3B,WAAW,CAAC2B,KAAD,EAAOlB,SAAP,CAAX;IACH;EAGD,CA9CF,CAnDqC,CAmGrC;;;EACA,MAAM0B,YAAY,GAAG;IAEnB9B,SAFmB;IAGnBE,UAHmB;IAInBG,YAJmB;IAKnBkB;EALmB,CAArB;EASA,oBACE,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAEO,YAAjC;IAAA,UAAgD/B;EAAhD;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CAhHD;;GAAMD,Y;UASYN,W;;;KATZM,Y;AAkHN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}