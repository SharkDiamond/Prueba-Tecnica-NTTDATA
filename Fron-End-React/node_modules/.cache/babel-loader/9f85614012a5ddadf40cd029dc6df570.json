{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel Arispe\\\\Desktop\\\\Prueba-Tecnica-NTTDATA\\\\Fron-End-React\\\\src\\\\Components\\\\GraficaLineal.js\",\n    _s = $RefreshSig$();\n\n//IMPORTACIONES\nimport { Chart as ChartJS, CategoryScale, LinearScale, Title, Tooltip, Legend, LineElement, PointElement } from \"chart.js\";\nimport { GraficasContext } from \"../Context/data-Graficas\";\nimport React, { useContext, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GraficaLineal() {\n  _s();\n\n  //DESESTRUCTURANDO EL CONTEXTO DE GRAFICA DATOS\n  const {\n    dataLineal: data,\n    getDataLineal\n  } = useContext(GraficasContext);\n  ChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend); //CICLO DE VIDA DE MONTAJE     \n\n  useEffect(() => {\n    //OBTENIENDO LOS DATOS PARA LA GRAFICA\n    getDataLineal();\n  }, []); //OPCIONES DE LA GAFICA\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      }\n    }\n  }; //DATOS DE LA GRAFICA\n\n  const dataGrafica = {\n    labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n    datasets: [{\n      label: 'Datos',\n      data,\n      borderColor: 'white',\n      backgroundColor: 'white'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: dataGrafica\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(GraficaLineal, \"sFcXEKQMLYsOWm8DKAicCtHBQOc=\");\n\n_c = GraficaLineal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraficaLineal\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","Title","Tooltip","Legend","LineElement","PointElement","GraficasContext","React","useContext","useEffect","Line","GraficaLineal","dataLineal","data","getDataLineal","register","options","responsive","plugins","legend","position","dataGrafica","labels","datasets","label","borderColor","backgroundColor"],"sources":["C:/Users/Gabriel Arispe/Desktop/Prueba-Tecnica-NTTDATA/Fron-End-React/src/Components/GraficaLineal.js"],"sourcesContent":["//IMPORTACIONES\r\nimport {Chart as ChartJS,CategoryScale,LinearScale,Title,Tooltip,Legend,LineElement,PointElement} from \"chart.js\";\r\nimport { GraficasContext } from \"../Context/data-Graficas\";\r\nimport React, { useContext,useEffect } from 'react';\r\nimport { Line } from \"react-chartjs-2\";\r\nimport '../App.css';\r\n\r\n\r\nexport default function GraficaLineal() {\r\n    \r\n    //DESESTRUCTURANDO EL CONTEXTO DE GRAFICA DATOS\r\n   const {dataLineal : data,getDataLineal}=useContext(GraficasContext);\r\n\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        PointElement,\r\n        LineElement,\r\n        Title,\r\n        Tooltip,\r\n        Legend\r\n      );\r\n      \r\n    //CICLO DE VIDA DE MONTAJE     \r\n    useEffect(() => {\r\n    \r\n    //OBTENIENDO LOS DATOS PARA LA GRAFICA\r\n    getDataLineal();\r\n\r\n    }, []);\r\n  \r\n\r\n     //OPCIONES DE LA GAFICA\r\n     const options = {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top' ,\r\n          },\r\n        \r\n        },\r\n     };\r\n      \r\n      //DATOS DE LA GRAFICA\r\n      const dataGrafica = {\r\n        labels:['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'],\r\n        datasets: [\r\n          {\r\n            label: 'Datos',\r\n            data,\r\n            borderColor: 'white',\r\n            backgroundColor: 'white',\r\n          }\r\n        ],\r\n      }\r\n\r\n    return (\r\n    <>\r\n\r\n      <Line options={options} data={dataGrafica} />\r\n\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA;AACA,SAAQA,KAAK,IAAIC,OAAjB,EAAyBC,aAAzB,EAAuCC,WAAvC,EAAmDC,KAAnD,EAAyDC,OAAzD,EAAiEC,MAAjE,EAAwEC,WAAxE,EAAoFC,YAApF,QAAuG,UAAvG;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,YAAP;;;AAGA,eAAe,SAASC,aAAT,GAAyB;EAAA;;EAEpC;EACD,MAAM;IAACC,UAAU,EAAGC,IAAd;IAAmBC;EAAnB,IAAkCN,UAAU,CAACF,eAAD,CAAlD;EAECR,OAAO,CAACiB,QAAR,CACIhB,aADJ,EAEIC,WAFJ,EAGIK,YAHJ,EAIID,WAJJ,EAKIH,KALJ,EAMIC,OANJ,EAOIC,MAPJ,EALoC,CAepC;;EACAM,SAAS,CAAC,MAAM;IAEhB;IACAK,aAAa;EAEZ,CALQ,EAKN,EALM,CAAT,CAhBoC,CAwBnC;;EACA,MAAME,OAAO,GAAG;IACbC,UAAU,EAAE,IADC;IAEbC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MADJ;IADD;EAFI,CAAhB,CAzBmC,CAmClC;;EACA,MAAMC,WAAW,GAAG;IAClBC,MAAM,EAAC,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,MAAvC,EAA+C,OAA/C,EAAwD,OAAxD,EAAgE,QAAhE,EAAyE,YAAzE,EAAsF,SAAtF,EAAgG,WAAhG,EAA4G,WAA5G,CADW;IAElBC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OADT;MAEEX,IAFF;MAGEY,WAAW,EAAE,OAHf;MAIEC,eAAe,EAAE;IAJnB,CADQ;EAFQ,CAApB;EAYF,oBACA;IAAA,uBAEE,QAAC,IAAD;MAAM,OAAO,EAAEV,OAAf;MAAwB,IAAI,EAAEK;IAA9B;MAAA;MAAA;MAAA;IAAA;EAFF,iBADA;AAOH;;GAvDuBV,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}