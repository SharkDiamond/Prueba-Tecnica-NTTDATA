{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel Arispe\\\\Desktop\\\\Prueba-Tecnica-NTTDATA\\\\Fron-End-React\\\\src\\\\Components\\\\Formularios\\\\EliminarUsuario.js\",\n    _s = $RefreshSig$();\n\nimport { GraficasContext } from '../../Context/data-Graficas';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport UsersTableList from '../usersTableList';\nimport errorManage from '../../Helpers/errors';\nimport React, { useContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EliminarUsuario() {\n  _s();\n\n  const navegador = useNavigate(); //OBTENIENDO LOS METODOS PARA ACTUALIZAR LOS DATOS DE LA GRAFICA\n\n  const {\n    getDataBarra,\n    getDataLineal\n  } = useContext(GraficasContext); //OBTENIENDO LOS PARAMETROS DE LA URL\n\n  const {\n    tipoGrafica\n  } = useParams();\n\n  const deleteUser = async (username, updatelistUsers) => {\n    try {\n      //HACIENDO LA PETICION PARA ELIMINAR EL USUARIO\n      const deleteUser = await axios.delete('http://localhost:3006/Users/deleteUser', {\n        headers: {\n          'access-token': sessionStorage.getItem('token')\n        },\n        data: {\n          username\n        }\n      });\n      updatelistUsers(deleteUser.data.newListUsers); //EN DADO CASO ESTE LA GRAFICA DE BARRA PARA ACTUALIZARLA\n\n      if (tipoGrafica === 'GraficaBarra') await getDataBarra(); //EN DADO CASO ESTE LA GRAFICA LINEAL PARA ACTUALIZARLA\n      else if (tipoGrafica === 'GraficaLineal') await getDataLineal(); //INDICANDO QUE EL USUARIO FUE ELIMINADO\n\n      alert(deleteUser.data.msg);\n    } catch (error) {\n      //PASANDOLE LOS DATOS AL MANEJADOR DE ERRORES  \n      errorManage(error, navegador); //ACTUALIZANDO LA LISTA DE USUARIOS\n\n      updatelistUsers(error.response.data.newListUsers);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UsersTableList, {\n      tableType: \"deleteUsers\",\n      deleteUsersFunction: deleteUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(EliminarUsuario, \"rvKrhetLPgOIFw7i1dtIQ7RcAXA=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EliminarUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"EliminarUsuario\");","map":{"version":3,"names":["GraficasContext","useNavigate","useParams","UsersTableList","errorManage","React","useContext","axios","EliminarUsuario","navegador","getDataBarra","getDataLineal","tipoGrafica","deleteUser","username","updatelistUsers","delete","headers","sessionStorage","getItem","data","newListUsers","alert","msg","error","response"],"sources":["C:/Users/Gabriel Arispe/Desktop/Prueba-Tecnica-NTTDATA/Fron-End-React/src/Components/Formularios/EliminarUsuario.js"],"sourcesContent":["import { GraficasContext } from '../../Context/data-Graficas';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport UsersTableList from '../usersTableList';\r\nimport errorManage from '../../Helpers/errors';\r\nimport React, { useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function EliminarUsuario() {\r\n  \r\n\r\n  const navegador=useNavigate();\r\n\r\n   //OBTENIENDO LOS METODOS PARA ACTUALIZAR LOS DATOS DE LA GRAFICA\r\n   const {getDataBarra,getDataLineal}=useContext(GraficasContext);\r\n  //OBTENIENDO LOS PARAMETROS DE LA URL\r\n  const {tipoGrafica}=useParams();\r\n\r\n\r\n  const deleteUser= async(username,updatelistUsers) => { \r\n\r\n    try {\r\n\r\n      //HACIENDO LA PETICION PARA ELIMINAR EL USUARIO\r\n       const deleteUser=await axios.delete('http://localhost:3006/Users/deleteUser',{\r\n        headers:{\r\n          'access-token':sessionStorage.getItem('token')\r\n        },\r\n        data: {\r\n          username\r\n        }\r\n\r\n        });\r\n        \r\n        updatelistUsers(deleteUser.data.newListUsers);\r\n        //EN DADO CASO ESTE LA GRAFICA DE BARRA PARA ACTUALIZARLA\r\n        if (tipoGrafica==='GraficaBarra') await getDataBarra();\r\n        //EN DADO CASO ESTE LA GRAFICA LINEAL PARA ACTUALIZARLA\r\n        else if (tipoGrafica==='GraficaLineal') await getDataLineal();\r\n        //INDICANDO QUE EL USUARIO FUE ELIMINADO\r\n        alert(deleteUser.data.msg);\r\n    \r\n      } catch (error) {\r\n\r\n      //PASANDOLE LOS DATOS AL MANEJADOR DE ERRORES  \r\n      errorManage(error,navegador);\r\n      //ACTUALIZANDO LA LISTA DE USUARIOS\r\n      updatelistUsers(error.response.data.newListUsers);\r\n      \r\n\r\n    }\r\n\r\n   }\r\n  \r\n  \r\n  \r\n  return (\r\n    <>\r\n      <UsersTableList tableType='deleteUsers' deleteUsersFunction={deleteUser} />\r\n    \r\n    </>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,SAASA,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,eAAe,SAASC,eAAT,GAA2B;EAAA;;EAGxC,MAAMC,SAAS,GAACR,WAAW,EAA3B,CAHwC,CAKvC;;EACA,MAAM;IAACS,YAAD;IAAcC;EAAd,IAA6BL,UAAU,CAACN,eAAD,CAA7C,CANuC,CAOxC;;EACA,MAAM;IAACY;EAAD,IAAcV,SAAS,EAA7B;;EAGA,MAAMW,UAAU,GAAE,OAAMC,QAAN,EAAeC,eAAf,KAAmC;IAEnD,IAAI;MAEF;MACC,MAAMF,UAAU,GAAC,MAAMN,KAAK,CAACS,MAAN,CAAa,wCAAb,EAAsD;QAC5EC,OAAO,EAAC;UACN,gBAAeC,cAAc,CAACC,OAAf,CAAuB,OAAvB;QADT,CADoE;QAI5EC,IAAI,EAAE;UACJN;QADI;MAJsE,CAAtD,CAAvB;MAUCC,eAAe,CAACF,UAAU,CAACO,IAAX,CAAgBC,YAAjB,CAAf,CAbA,CAcA;;MACA,IAAIT,WAAW,KAAG,cAAlB,EAAkC,MAAMF,YAAY,EAAlB,CAAlC,CACA;MADA,KAEK,IAAIE,WAAW,KAAG,eAAlB,EAAmC,MAAMD,aAAa,EAAnB,CAjBxC,CAkBA;;MACAW,KAAK,CAACT,UAAU,CAACO,IAAX,CAAgBG,GAAjB,CAAL;IAED,CArBH,CAqBI,OAAOC,KAAP,EAAc;MAEhB;MACApB,WAAW,CAACoB,KAAD,EAAOf,SAAP,CAAX,CAHgB,CAIhB;;MACAM,eAAe,CAACS,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBC,YAArB,CAAf;IAGD;EAED,CAjCF;;EAqCA,oBACE;IAAA,uBACE,QAAC,cAAD;MAAgB,SAAS,EAAC,aAA1B;MAAwC,mBAAmB,EAAER;IAA7D;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAMD;;GAtDuBL,e;UAGNP,W,EAKIC,S;;;KAREM,e"},"metadata":{},"sourceType":"module"}